/* eslint-env node */
module.exports = {
  root: true,
  ignorePatterns: [
    'dist',
    'build',
    'coverage',
    'node_modules',
    '.vite',
    'public',
    '**/*.min.*',
    '**/generated/**',
  ],
  env: { browser: true, es2023: true, node: true },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: ['./tsconfig.eslint.json'],
    tsconfigRootDir: __dirname,
    ecmaVersion: 'latest',
    sourceType: 'module',
    ecmaFeatures: { jsx: true },
  },
  plugins: [
    '@typescript-eslint',
    'react',
    'react-hooks',
    'import',
    'jsx-a11y',
    'unicorn',
    'tailwindcss',
    'simple-import-sort',
  ],
  settings: {
    react: { version: 'detect' },
    'import/parsers': { '@typescript-eslint/parser': ['.ts', '.tsx'] },
    'import/resolver': {
      typescript: { project: ['./tsconfig.eslint.json'], alwaysTryTypes: true },
      node: { extensions: ['.js', '.jsx', '.ts', '.tsx'] },
    },
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'plugin:jsx-a11y/recommended',
    'plugin:unicorn/recommended',
  ],
  rules: {
    'react/react-in-jsx-scope': 'off',
    'react/jsx-uses-react': 'off',
    'import/no-unresolved': 'off',
    'import/order': 'off',
    'simple-import-sort/imports': 'warn',
    'simple-import-sort/exports': 'warn',
    'tailwindcss/classnames-order': 'warn',
    'tailwindcss/no-custom-classname': 'off',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
    'max-lines': ['warn', { max: 300, skipBlankLines: true, skipComments: true }],
    'max-lines-per-function': [
      'warn',
      { max: 80, skipBlankLines: true, skipComments: true, IIFEs: true },
    ],
    'max-depth': ['warn', 3],
    complexity: ['warn', 10],
    '@typescript-eslint/no-misused-promises': ['warn', { checksVoidReturn: false }],
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'no-restricted-imports': [
      'error',
      {
        patterns: [
          { group: ['@features/*/*'], message: '请从 @features/<name> 的公共入口导入。' },
          { group: ['@entities/*/*'], message: '请从 @entities/<name> 的公共入口导入。' },
          { group: ['@shared/*/*/*'], message: '请从 @shared/<name> 的公共入口导入。' },
          { group: ['@pages/*/**'], message: '禁止跨页面子路径依赖，请抽到 widgets/features。' },
          { group: ['@widgets/*/*'], message: '请从 @widgets/<name> 公共入口导入。' },
        ],
      },
    ],
    'unicorn/filename-case': 'off',
    'unicorn/prevent-abbreviations': 'off',
  },
  overrides: [
    {
      files: ['**/*.config.{js,cjs,mjs,ts}', 'vite.config.{js,ts}', 'tailwind.config.{js,ts}'],
      rules: {
        'max-lines': 'off',
        'max-lines-per-function': 'off',
        complexity: 'off',
      },
    },
    {
      files: ['**/*.{test,spec}.{ts,tsx}'],
      env: { jest: true },
      rules: {
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
      },
    },
  ],
};
